plugins {
    id 'org.jetbrains.kotlin.jvm' version "1.3.41"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.41"
    id 'io.quarkus'
}

repositories {
    mavenLocal()
}

dependencies {
    implementation 'io.quarkus:quarkus-jackson'
    implementation 'io.quarkus:quarkus-resteasy-jackson'
    implementation 'io.quarkus:quarkus-kotlin'
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-resteasy'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
}

group 'de.elurz'
version '1.0.0'

quarkus {
    setOutputDirectory("$projectDir/build/classes/kotlin/main")
}

quarkusDev {
    setSourceDir("$projectDir/src/main/kotlin")
}

allOpen {
    annotation("javax.ws.rs.Path")
    annotation("javax.enterprise.context.ApplicationScoped")
    annotation("io.quarkus.test.junit.QuarkusTest")
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
    kotlinOptions.javaParameters = true
}

compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
}

task includeFrontend(type: Copy) {
    description "Copies frontend dist to static dir"
    dependsOn "buildFrontend"
    from "$projectDir/frontend/dist"
    into "$projectDir/src/main/resources/META-INF/resources"
}

task buildFrontend(type: Exec) {
    description "Build Frontend"
    workingDir "$projectDir/frontend"
    commandLine "npm", "ci"
    commandLine "npm", "run", "build"
}

